#include"Football_Screen.h"

int F_Screen::g_nScreenIndex = 0;
HANDLE F_Screen::g_hScreen[] = { 0 };

F_Screen::F_Screen()
{
	ScreenInit();
}

void F_Screen::ScreenInit()
{
	CONSOLE_CURSOR_INFO cci;

	// 陛鼻曖 夔樂璽 2偃瑙 虜萇棻.
	g_hScreen[0] = CreateConsoleScreenBuffer(GENERIC_READ | GENERIC_WRITE, 0, NULL, CONSOLE_TEXTMODE_BUFFER, NULL);
	g_hScreen[1] = CreateConsoleScreenBuffer(GENERIC_READ | GENERIC_WRITE, 0, NULL, CONSOLE_TEXTMODE_BUFFER, NULL);

	// 醴憮 獗晦晦
	cci.dwSize = 1;
	cci.bVisible = FALSE;
	SetConsoleCursorInfo(g_hScreen[0], &cci);
	SetConsoleCursorInfo(g_hScreen[1], &cci);
}

void F_Screen::ScreenFlipping()
{
	Sleep(10);
	SetConsoleActiveScreenBuffer(g_hScreen[g_nScreenIndex]);
	g_nScreenIndex = !g_nScreenIndex;
}

void F_Screen::ScreenClear()
{
	COORD Coor = { 0, 0 };
	DWORD dw;
	FillConsoleOutputCharacter(g_hScreen[g_nScreenIndex], ' ', 80 * 25, Coor, &dw);
}

void F_Screen::ScreenRelease()
{
	CloseHandle(g_hScreen[0]);
	CloseHandle(g_hScreen[1]);
}

void F_Screen::ScreenPrint(int x, int y, char *string)
{
	DWORD dw;
	COORD CursorPosition = { x, y };
	SetConsoleCursorPosition(g_hScreen[g_nScreenIndex], CursorPosition);
	WriteFile(g_hScreen[g_nScreenIndex], string, strlen(string), &dw, NULL);
}

void F_Screen::SetColor(unsigned short color)
{
	SetConsoleTextAttribute(g_hScreen[g_nScreenIndex], color);
}

void F_Screen::InitScreen()
{
	ScreenPrint(0, 0, "旨收收收收收收收收收收收收收收收收收收收收收旬");
	ScreenPrint(0, 1, "早                                          早");
	ScreenPrint(0, 2, "早             ﹤收收收﹤                   早");
	ScreenPrint(0, 3, "早                                          早");
	ScreenPrint(0, 4, "早                        ///.   螂~~~      早");
	ScreenPrint(0, 5, "早                       (^.^)              早");
	ScreenPrint(0, 6, "早                      曲朽 曳旬           早");
	ScreenPrint(0, 7, "早                         旨旭             早");
	ScreenPrint(0, 8, "早                     Ⅸ  旭′             早");
	ScreenPrint(0, 9, "早                                          早");
	ScreenPrint(0, 10, "早                                          早");
	ScreenPrint(0, 11, "早       螂 埤檣 啪歜  Go! Go!              早");
	ScreenPrint(0, 12, "早                                          早");
	ScreenPrint(0, 13, "早                                          早");
	ScreenPrint(0, 14, "早       j :豭薹 l : 螃艇薹 k :螂           早");
	ScreenPrint(0, 15, "早                                          早");
	ScreenPrint(0, 16, "早                                          早");
	ScreenPrint(0, 17, "早                                          早");
	ScreenPrint(0, 18, "早        曲≒旭  space 酈蒂 揚楝輿撮蹂     早");
	ScreenPrint(0, 19, "早                                          早");
	ScreenPrint(0, 20, "早                                          早");
	ScreenPrint(0, 21, "早                          20151722 檜⑷團 早");
	ScreenPrint(0, 22, "曲收收收收收收收收收收收收收收收收收收收收收旭");
}

void F_Screen::ReadyScreen(int* g_nStage)
{
	char string[100];

	ScreenPrint(0, 0, "旨收收收收收收收收收收收收收收收收收收收收收旬");
	ScreenPrint(0, 1, "早﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥早");
	ScreenPrint(0, 2, "早﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥早");
	ScreenPrint(0, 3, "早﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥早");
	ScreenPrint(0, 4, "早﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥早");
	ScreenPrint(0, 5, "早﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥早");
	ScreenPrint(0, 6, "早﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥早");
	ScreenPrint(0, 7, "早﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥早");
	ScreenPrint(0, 8, "早﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥早");
	ScreenPrint(0, 9, "早﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥早");
	ScreenPrint(0, 10, "早﹥﹥﹥﹥﹥                    ﹥﹥﹥﹥﹥﹥早");
	sprintf(string, "早﹥﹥﹥﹥﹥     %d   蝶纔檜雖   ﹥﹥﹥﹥﹥﹥早", (*g_nStage + 1));
	ScreenPrint(0, 11, string);
	ScreenPrint(0, 12, "早﹥﹥﹥﹥﹥                    ﹥﹥﹥﹥﹥﹥早");
	ScreenPrint(0, 13, "早﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥早");
	ScreenPrint(0, 14, "早﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥早");
	ScreenPrint(0, 15, "早﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥早");
	ScreenPrint(0, 16, "早﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥早");
	ScreenPrint(0, 17, "早﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥早");
	ScreenPrint(0, 18, "早﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥早");
	ScreenPrint(0, 19, "早﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥早");
	ScreenPrint(0, 20, "早﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥早");
	ScreenPrint(0, 21, "早﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥早");
	ScreenPrint(0, 22, "早﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥﹥早");
	ScreenPrint(0, 23, "曲收收收收收收收收收收收收收收收收收收收收收旭");
}

void F_Screen::BackScreen(int* g_nStage, STAGE_INFO *g_sStageInfo, clock_t *g_GameStartTime)
{
	char string[100];

	ScreenPrint(0, 0, "旨收收收收收收收收收收收收收收收收收收收收收旬");
	ScreenPrint(0, 1, "早                                          早");
	ScreenPrint(0, 2, "早                                          早");
	ScreenPrint(0, 3, "早                                          早");
	sprintf(string, "早                                          早蝶纔檜雖: %d", *g_nStage + 1);
	ScreenPrint(0, 4, string);
	ScreenPrint(0, 5, "早                                          早");
	sprintf(string, "曳收收收收收收收收收收收收收收收收收收收收收朽薯и 衛除: %d", g_sStageInfo[*g_nStage].LimitTime / 1000);
	ScreenPrint(0, 6, string);
	ScreenPrint(0, 7, "早                                          早");
	sprintf(string, "早                                          早⑷營 衛除: %d", (clock() - *g_GameStartTime) / 1000);
	ScreenPrint(0, 8, string);
	ScreenPrint(0, 9, "早                                          早");
	sprintf(string, "早                                          早跡ル 埤檣: %d ", g_sStageInfo[*g_nStage].nGoalBall);
	ScreenPrint(0, 10, string);
	ScreenPrint(0, 11, "早                                          早");
	sprintf(string, "早                                          早埤檣 奢 偃熱: %d ", g_nBallCount);
	ScreenPrint(0, 12, string);

	ScreenPrint(0, 13, "早                                          早");
	sprintf(string, "早                                          早");
	ScreenPrint(0, 14, string);
	ScreenPrint(0, 15, "早                                          早");
	sprintf(string, "早                                          早");
	ScreenPrint(0, 16, string);
	ScreenPrint(0, 17, "早                                          早");
	ScreenPrint(0, 18, "早                                          早");
	ScreenPrint(0, 19, "早                                          早");
	ScreenPrint(0, 20, "早                                          早");
	ScreenPrint(0, 21, "早                                          早");
	ScreenPrint(0, 22, "早                                          早");
	ScreenPrint(0, 23, "曲收收收收收收收收收收收收收收收收收收收收收旭");
}

void F_Screen::GoalMessage(int nX, int nY)
{
	ScreenPrint(nX, nY, "≧ )) 埤檣 (( ≠");
	ScreenPrint(nX, nY + 1, "′(^^')/ ′(\"*')/");
	ScreenPrint(nX, nY + 2, "   ﹥       ﹥");
	ScreenPrint(nX, nY + 3, "  戎忖    忙戌");
}

void F_Screen::SuccessScreen()
{
	ScreenPrint(0, 0, "旨收收收收收收收收收收收收收收收收收收收收收旬");
	ScreenPrint(0, 1, "早                                          早");
	ScreenPrint(0, 2, "早                                          早");
	ScreenPrint(0, 3, "早                                          早");
	ScreenPrint(0, 4, "早                                          早");
	ScreenPrint(0, 5, "早                                          早");
	ScreenPrint(0, 6, "早                ////′′                  早");
	ScreenPrint(0, 7, "早               q ∥  ∥ p                 早");
	ScreenPrint(0, 8, "早               (戌式式戎)                 早");
	ScreenPrint(0, 9, "早             Ｏ 嘐暮 撩奢 Ｎ              早");
	ScreenPrint(0, 10, "早                                          早");
	ScreenPrint(0, 11, "早                                          早");
	ScreenPrint(0, 12, "早                                          早");
	ScreenPrint(0, 13, "早                                          早");
	ScreenPrint(0, 14, "早                                          早");
	ScreenPrint(0, 15, "早                                          早");
	ScreenPrint(0, 16, "早                                          早");
	ScreenPrint(0, 17, "早                                          早");
	ScreenPrint(0, 18, "早                                          早");
	ScreenPrint(0, 19, "早                                          早");
	ScreenPrint(0, 20, "早                                          早");
	ScreenPrint(0, 21, "早                                          早");
	ScreenPrint(0, 22, "早                                          早");
	ScreenPrint(0, 23, "曲收收收收收收收收收收收收收收收收收收收收收旭");
}

void F_Screen::FailureScreen()
{
	ScreenPrint(0, 0, "旨收收收收收收收收收收收收收收收收收收收收收旬");
	ScreenPrint(0, 1, "早                                          早");
	ScreenPrint(0, 2, "早                                          早");
	ScreenPrint(0, 3, "早                                          早");
	ScreenPrint(0, 4, "早                                          早");
	ScreenPrint(0, 5, "早                                          早");
	ScreenPrint(0, 6, "早                                          早");
	ScreenPrint(0, 7, "早                                          早");
	ScreenPrint(0, 8, "早                                          早");
	ScreenPrint(0, 9, "早                                          早");
	ScreenPrint(0, 10, "早                                          早");
	ScreenPrint(0, 11, "早                    嘐暮 褒ぬ !!!!        早");
	ScreenPrint(0, 12, "早                                          早");
	ScreenPrint(0, 13, "早                                          早");
	ScreenPrint(0, 14, "早                 ≒有收旬                 早");
	ScreenPrint(0, 15, "早                   旭  曲                 早");
	ScreenPrint(0, 16, "早                  ﹥﹥﹥﹥                早");
	ScreenPrint(0, 17, "早                                          早");
	ScreenPrint(0, 18, "早        棻衛 ж衛啊蝗棲梱? (y/n)          早");
	ScreenPrint(0, 19, "早                                          早");
	ScreenPrint(0, 20, "早                                          早");
	ScreenPrint(0, 21, "早                                          早");
	ScreenPrint(0, 22, "曲收收收收收收收收收收收收收收收收收收收收收旭");
}

void F_Screen::ResultScreen(int* g_nStage)
{
	char string[100];
	ScreenPrint(0, 0, "旨收收收收收收收收收收收收收收收收收收收收收旬");
	ScreenPrint(0, 1, "早                                          早");
	ScreenPrint(0, 2, "早                                          早");
	ScreenPrint(0, 3, "早             ﹤收收收﹤                   早");
	ScreenPrint(0, 4, "早                                          早");
	ScreenPrint(0, 5, "早                                          早");
	ScreenPrint(0, 6, "早                                          早");
	ScreenPrint(0, 7, "早                                          早");
	sprintf(string, "早      撩奢и 蝶纔檜雖 :  %2d               早", *g_nStage + 1);
	ScreenPrint(0, 8, string);
	ScreenPrint(0, 9, "早                                          早");
	ScreenPrint(0, 10, "早                                          早");
	ScreenPrint(0, 11, "早   ___〤〤〤___                           早");
	ScreenPrint(0, 12, "早     (*^  ^*)                             早");
	ScreenPrint(0, 13, "早 =====∞==∞=====                         早");
	ScreenPrint(0, 14, "早                                          早");
	ScreenPrint(0, 15, "早                                          早");
	ScreenPrint(0, 16, "早                                          早");
	ScreenPrint(0, 17, "早                                          早");
	ScreenPrint(0, 18, "早                      曲≒旭              早");
	ScreenPrint(0, 19, "早                                          早");
	ScreenPrint(0, 20, "早                                          早");
	ScreenPrint(0, 21, "早                                          早");
	ScreenPrint(0, 22, "曲收收收收收收收收收收收收收收收收收收收收收旭");
}